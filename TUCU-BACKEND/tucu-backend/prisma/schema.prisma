// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model COUNTRIES {
  idCOUNTRIES Int        @id @default(autoincrement())
  name        String
  provinces   PROVINCE[]
}

model PROVINCE {
  idPROVINCE Int       @id @default(autoincrement())
  name       String
  id_country Int
  COUNTRIES  COUNTRIES @relation(fields: [id_country], references: [idCOUNTRIES])
  cities     CITY[]
}

model CITY {
  idCITY      Int         @id @default(autoincrement())
  name        String
  id_province Int
  PROVINCE    PROVINCE    @relation(fields: [id_province], references: [idPROVINCE])
  addresses   ADDRESSES[]
}

model ADDRESSES {
  idADDRESSES Int           @id @default(autoincrement())
  street      String
  cityId      Int
  city        CITY          @relation(fields: [cityId], references: [idCITY])
  stores      STORES[]
  deliverymen DELIVERYMEN[]
  deliveries  DELIVERIES[]
}

model DELIVERYMEN {
  idDELIVERYMEN                   Int          @id
  surname                         String
  enabled                         Int
  email                           String
  drivers_license                 Boolean
  soat                            String
  tm_and_g_inspection_certificate Boolean
  timestamp                       DateTime
  id_address_men_fk               Int
  addresses                       ADDRESSES    @relation(fields: [id_address_men_fk], references: [idADDRESSES])
  DELIVERIES                      DELIVERIES[]
}

model STORES {
  idStores            Int          @id @default(autoincrement())
  name                String
  nit                 Int
  telephone_number    String
  id_address_fk_store Int
  addresses           ADDRESSES    @relation(fields: [id_address_fk_store], references: [idADDRESSES])
  USERS               USERS[]
  DELIVERIES          DELIVERIES[]
}

model ROLES {
  idROLES          Int     @id
  roleName         Int
  description_role String?
  USERS            USERS[]
}

model USERS {
  idUSERS      Int          @id
  username     String
  firstname    String
  password     String
  surname      String
  enabled      Int
  email        String
  timestamp    DateTime     @default(now())
  id_stores_fk Int
  id_roles_fk  Int
  STORES       STORES       @relation(fields: [id_stores_fk], references: [idStores])
  ROLES        ROLES        @relation(fields: [id_roles_fk], references: [idROLES])
  DELIVERIES   DELIVERIES[]

  @@map("users")
}

model DELIVERIES {
  idDELIVERIES      Int         @id
  timestamp         String
  preparation_time  Int
  state             Int
  id_users_fk       Int
  id_stores_fk      Int
  id_deliverymen_fk Int
  id_address_fk     Int
  USERS             USERS       @relation(fields: [id_users_fk], references: [idUSERS])
  STORES            STORES      @relation(fields: [id_stores_fk], references: [idStores])
  DELIVERYMEN       DELIVERYMEN @relation(fields: [id_deliverymen_fk], references: [idDELIVERYMEN])
  HISTORIES         HISTORIES[]
  ADDRESSES         ADDRESSES   @relation(fields: [id_address_fk], references: [idADDRESSES])
}

model HISTORIES {
  idHISTORIES   Int        @id @default(autoincrement())
  action        String
  modified_at   String
  id_delivey_fk Int
  DELIVERIES    DELIVERIES @relation(fields: [id_delivey_fk], references: [idDELIVERIES])
}
